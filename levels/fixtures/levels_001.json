[{"fields": {"number": 1, "name": "Oppertunistic"}, "model": "levels.levelnumber", "pk": 1}, {"fields": {"number": 2, "name": "Standard"}, "model": "levels.levelnumber", "pk": 2}, {"fields": {"number": 3, "name": "Advanced"}, "model": "levels.levelnumber", "pk": 3}, {"fields": {"version": "V2", "name": "Authentication"}, "model": "levels.category", "pk": 1}, {"fields": {"version": "V3", "name": "Session Management"}, "model": "levels.category", "pk": 2}, {"fields": {"version": "V4", "name": "Access Control"}, "model": "levels.category", "pk": 3}, {"fields": {"version": "V5", "name": "Malicious Input Handling"}, "model": "levels.category", "pk": 4}, {"fields": {"version": "V7", "name": "Cryptography at Rest"}, "model": "levels.category", "pk": 5}, {"fields": {"version": "V8", "name": "Error Handling and Logging"}, "model": "levels.category", "pk": 6}, {"fields": {"version": "V9", "name": "Data Protection"}, "model": "levels.category", "pk": 7}, {"fields": {"version": "V10", "name": "Communication Security"}, "model": "levels.category", "pk": 8}, {"fields": {"version": "V11", "name": "HTTP Security"}, "model": "levels.category", "pk": 9}, {"fields": {"version": "V13", "name": "Malicious Controls"}, "model": "levels.category", "pk": 10}, {"fields": {"version": "V15", "name": "Business Logic"}, "model": "levels.category", "pk": 11}, {"fields": {"version": "V16", "name": "File and Resource"}, "model": "levels.category", "pk": 12}, {"fields": {"version": "V17", "name": "Mobile"}, "model": "levels.category", "pk": 13}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify all pages and resources require authentication except those\r\nspecifically intended to be public (Principle of complete mediation)."}, "model": "levels.requirement", "pk": 1}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify all password fields do not echo the user\u2019s password when it is\r\nentered."}, "model": "levels.requirement", "pk": 2}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify all authentication controls are enforced on the server side."}, "model": "levels.requirement", "pk": 3}, {"fields": {"category": 1, "number": [3], "description": "Verify all authentication controls (including libraries that call external\r\nauthentication services) have a centralized implementation."}, "model": "levels.requirement", "pk": 4}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify all authentication controls fail securely to ensure attackers\r\ncannot log in."}, "model": "levels.requirement", "pk": 5}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify password entry fields allow or encourage the use of\r\npassphrases, and do not prevent long passphrases or highly complex\r\npasswords being entered, and provide a sufficient minimum strength\r\nto protect against the use of commonly chosen passwords."}, "model": "levels.requirement", "pk": 6}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify all account identity authentication functions (such as registration,\r\nupdate profile, forgot username, forgot password, disabled / lost token,\r\nhelp desk or IVR) that might regain access to the account are at least\r\nas resistant to attack as the primary authentication mechanism."}, "model": "levels.requirement", "pk": 7}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify users can safely change their credentials using a mechanism\r\nthat is at least as resistant to attack as the primary authentication\r\nmechanism."}, "model": "levels.requirement", "pk": 8}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that all authentication decisions are logged. This should include\r\nrequests with missing required information, needed for security\r\ninvestigations."}, "model": "levels.requirement", "pk": 9}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that account passwords are salted using a salt that is unique to\r\nthat account (e.g., internal user ID, account creation) and use bcrypt,\r\nscrypt or PBKDF2 before storing the password."}, "model": "levels.requirement", "pk": 10}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify that credentials, and all other identity information handled by the\r\napplication(s), do not traverse unencrypted or weakly encrypted\r\nlinks."}, "model": "levels.requirement", "pk": 11}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify that the forgotten password function and other recovery paths\r\ndo not reveal the current password and that the new password is not\r\nsent in clear text to the user."}, "model": "levels.requirement", "pk": 12}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify that username enumeration is not possible via login, password\r\nreset, or forgot account functionality."}, "model": "levels.requirement", "pk": 13}, {"fields": {"category": 1, "number": [1, 2, 3], "description": "Verify there are no default passwords in use for the application\r\nframework or any components used by the application (such as\r\n\u201cadmin/password\u201d)."}, "model": "levels.requirement", "pk": 14}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that a resource governor is in place to protect against vertical (a\r\nsingle account tested against all possible passwords) and horizontal\r\nbrute forcing (all accounts tested with the same password e.g.\r\n\u201cPassword1\u201d). A correct credential entry should incur no delay. Both\r\nthese governor mechanisms should be active simultaneously to\r\nprotect against diagonal and distributed attacks."}, "model": "levels.requirement", "pk": 15}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that all authentication credentials for accessing services\r\nexternal to the application are encrypted and stored in a protected\r\nlocation (not in source code)."}, "model": "levels.requirement", "pk": 16}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that forgot password and other recovery paths send a link\r\nincluding a time-limited activation token rather than the password itself.\r\nAdditional authentication based on soft-tokens (e.g. SMS token,\r\nnative mobile applications, etc.) can be required as well before the link\r\nis sent over."}, "model": "levels.requirement", "pk": 17}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that forgot password functionality does not lock or otherwise\r\ndisable the account until after the user has successfully changed their\r\npassword. This is to prevent valid users from being locked out."}, "model": "levels.requirement", "pk": 18}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that there are no shared knowledge questions/answers (so\r\ncalled \u201csecret\u201d questions and answers)."}, "model": "levels.requirement", "pk": 19}, {"fields": {"category": 1, "number": [2, 3], "description": "Verify that the system can be configured to disallow the use of a\r\nconfigurable number of previous passwords."}, "model": "levels.requirement", "pk": 20}, {"fields": {"category": 1, "number": [3], "description": "Verify re-authentication, step up or adaptive authentication, SMS or\r\nother two factor authentication, or transaction signing is required\r\nbefore any application-specific sensitive operations are permitted as\r\nper the risk profile of the application."}, "model": "levels.requirement", "pk": 21}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that the framework\u2019s default session management control\r\nimplementation is used by the application."}, "model": "levels.requirement", "pk": 22}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that sessions are invalidated when the user logs out."}, "model": "levels.requirement", "pk": 23}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that sessions timeout after a specified period of inactivity."}, "model": "levels.requirement", "pk": 24}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that sessions timeout after an administratively-configurable\r\nmaximum time period regardless of activity (an absolute timeout)."}, "model": "levels.requirement", "pk": 25}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that all pages that require authentication to access them have\r\nlogout links."}, "model": "levels.requirement", "pk": 26}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that the session id is never disclosed other than in cookie\r\nheaders; particularly in URLs, error messages, or logs. This includes\r\nverifying that the application does not support URL rewriting of\r\nsession cookies."}, "model": "levels.requirement", "pk": 27}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that the session id is changed on login to prevent session\r\nfixation."}, "model": "levels.requirement", "pk": 28}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that the session id is changed upon re-authentication."}, "model": "levels.requirement", "pk": 29}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that only session ids generated by the application framework\r\nare recognized as valid by the application."}, "model": "levels.requirement", "pk": 30}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that authenticated session tokens are sufficiently long and\r\nrandom to withstand session guessing attacks."}, "model": "levels.requirement", "pk": 31}, {"fields": {"category": 2, "number": [2, 3], "description": "Verify that authenticated session tokens using cookies have their path\r\nset to an appropriately restrictive value for that site. The domain\r\ncookie attribute restriction should not be set unless for a business\r\nrequirement, such as single sign on."}, "model": "levels.requirement", "pk": 32}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that authenticated session tokens using cookies sent via HTTP,\r\nare protected by the use of \u201cHttpOnly\u201d."}, "model": "levels.requirement", "pk": 33}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that authenticated session tokens using cookies are protected\r\nwith the \u201csecure\u201d attribute and a strict transport security header (such\r\nas Strict-Transport-Security: max-age=60000; includeSubDomains)\r\nare present."}, "model": "levels.requirement", "pk": 34}, {"fields": {"category": 2, "number": [1, 2, 3], "description": "Verify that the application does not permit duplicate concurrent user\r\nsessions, originating from different machines."}, "model": "levels.requirement", "pk": 35}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that users can only access secured functions or services for\r\nwhich they possess specific authorization."}, "model": "levels.requirement", "pk": 36}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that users can only access secured URLs for which they\r\npossess specific authorization."}, "model": "levels.requirement", "pk": 37}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that users can only access secured data files for which they\r\npossess specific authorization."}, "model": "levels.requirement", "pk": 38}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that direct object references are protected, such that only\r\nauthorized objects or data are accessible to each user (for example,\r\nprotect against direct object reference tampering)."}, "model": "levels.requirement", "pk": 39}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that directory browsing is disabled unless deliberately desired."}, "model": "levels.requirement", "pk": 40}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that access controls fail securely."}, "model": "levels.requirement", "pk": 41}, {"fields": {"category": 3, "number": [2, 3], "description": "Verify that the same access control rules implied by the presentation\r\nlayer are enforced on the server side for that user role, such that\r\ncontrols and parameters cannot be re-enabled or re-added from\r\nhigher privilege users."}, "model": "levels.requirement", "pk": 42}, {"fields": {"category": 3, "number": [2, 3], "description": "Verify that all user and data attributes and policy information used by\r\naccess controls cannot be manipulated by end users unless\r\nspecifically authorized."}, "model": "levels.requirement", "pk": 43}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that all access controls are enforced on the server side."}, "model": "levels.requirement", "pk": 44}, {"fields": {"category": 3, "number": [3], "description": "Verify that there is a centralized mechanism (including libraries that\r\ncall external authorization services) for protecting access to each type\r\nof protected resource."}, "model": "levels.requirement", "pk": 45}, {"fields": {"category": 3, "number": [2, 3], "description": "Verify that all access control decisions are being logged and all failed\r\ndecisions are logged."}, "model": "levels.requirement", "pk": 46}, {"fields": {"category": 3, "number": [1, 2, 3], "description": "Verify that the application or framework generates strong random\r\nanti-CSRF tokens unique to the user as part of all high value\r\ntransactions or accessing sensitive data, and that the application\r\nverifies the presence of this token with the proper value for the current\r\nuser when processing these requests."}, "model": "levels.requirement", "pk": 47}, {"fields": {"category": 3, "number": [2, 3], "description": "Aggregate access control protection \u2013 verify the system can protect\r\nagainst aggregate or continuous access of secured functions,\r\nresources, or data. For example, possibly by the use of a resource\r\ngovernor to limit the number of edits per hour or to pr"}, "model": "levels.requirement", "pk": 48}]